version: 2.1

jobs:
  build:
    docker:
      - image: node:11.10.1

    working_directory: ~/repo
    steps:
      - checkout

        #      - restore_cache:
        #  keys:
        #      - v1-dependencies-{{checksum "companion-app/package.json"}}
        #      - v1-dependencies-


        #- run: yarn --cwd companion-app/ install

        #- save_cache:
        #  paths:
        #      - companion-app/node_modules
        #  key: v1-dependencies-{{checksum "companion-app/package.json"}}

      # run tests!
      #- run: yarn --cwd companion-app/ test

        #- run: yarn --cwd companion-app/ build

      - run:
          name: Updating CI System
          command: 'apt-get update'
      - run:
          name:  Installing updates
          command: 'apt install -y build-essential zlib1g-dev libncurses5-dev libgdbm-dev libnss3-dev libssl-dev libreadline-dev libffi-dev wget'
          #- run:
          #name: Installing Python3.7
          #command: "apt-get install python3.7 -y"
      - run:
          name: Installing pip3
          command: "apt-get install python3-pip -y"
      - run:
          name: Installing boto3
          command: "pip3 install boto3"
      - run:
          name: Installing pytest
          command: "pip3 install pytest"
      - run:
          name: Installing SUDO
          command: 'apt-get update && apt-get install -y sudo && rm -rf /var/lib/apt/lists/*'
      - run:
          name: Installing GCC
          command: 'apt-get update && apt-get install -y gcc g++'
      - run:
         name: Install CMAKE
         command: 'apt-get update && sudo apt-get install -y cmake'
      - run:
          name: Bulding Python3.7
          command: 'cd tmp/ && wget https://www.python.org/ftp/python/3.7.2/Python-3.7.2.tar.xz && tar -xf Python-3.7.2.tar.xz && cd Python-3.7.2 && ./configure --enable-optimizations && make -j 1 && make altinstall'
      - run:
          name: Creating Binary Files
          command: 'cd AudioEngine/ && make test CPU=X86 CONFIG=Debug'
      - run:
          name: Point Unit Testing
          command: 'cd AudioEngine/ && ./audio_test'
      - run:
          name: Run server.py unit tests
          command: "cd pyServer/ && pytest"
